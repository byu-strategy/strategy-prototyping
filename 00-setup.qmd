---
title: "Week 1 - Hello World"
editor: visual
---

## Classic Debates

### Do Product Managers Need to Code?

Position 1: Yes, Product Managers Should Know how to Code

Arguments:

- Empathy with Engineering: Coding builds appreciation for technical complexity, fostering better collaboration with developers.
- Faster Prototyping: A PM who can code can create quick MVPs or mockups, accelerating feedback loops and testing hypotheses without waiting on engineering.
- Credibility: Technical fluency increases trust and influence with engineering teams, especially in AI or data-driven products.
- AI Integration: As AI tools become programmable interfaces (e.g., OpenAI APIs, LangChain), knowing how to structure prompts, call APIs, or run Python code becomes part of the PM toolkit.

Counterpoints:
- Relying entirely on others for every experiment slows velocity.
- Limits the ability to personally explore what’s technically feasible.

Position 2: No, Product Managers Don’t Need to Code

Arguments:

- Focus on the Problem, Not the Solution: Great PMs obsess over customer problems, strategy, and product-market fit — not implementation.
- Time Allocation: PMs are more valuable aligning teams, shaping vision, and making decisions than writing code.
- Collaborative Model: Engineering, design, and data science exist to build — the PM’s superpower is translating customer need into strategy and sequencing.
- AI Tools Lower Technical Barriers: No-code and low-code tools (e.g., Bubble, Zapier, ChatGPT) let non-coders build meaningful prototypes.

What do you think?

The answer for this course: Yes, product managers should know how to code. Not to become full-time developers, but because even basic coding skills significantly expand what a PM can do — from faster prototyping to task automation and data exploration. It’s not just about building the product; it’s about removing friction wherever possible to accelerate progress. AI ChatBots alone are a powerful accelerator, but the ability to understand and leverage AI-generated code takes a PM’s capabilities substantially further. Hence, with the help of AI, you will learn to code in this class. 

## Product management is the art of saying no.

The “Yes–No–Yes” Framework for Product Managers
Instead of just saying "no", a great PM:

Yes (Affirm the intent):
Acknowledge the value or need behind the request.
“Yes, I see why this could really help power users streamline their workflow...”
No (Set the boundary):
Explain why the request can’t be prioritized right now — based on impact, strategy, or constraints.
“...but we’re currently focused on improving onboarding, which addresses a larger user segment and a key growth lever.”
Yes (Offer an alternative or future option):
Suggest a constructive next step — test, revisit, or add to backlog with clear criteria.
“...that said, let’s track requests for this and revisit after the next release cycle. I’ll also flag it for user interviews to explore how big the need really is.”
Reframing the PM Job: It’s Not Just Saying No — It’s Prioritizing with Empathy and Clarity
Rather than seeing yourself as a gatekeeper, this approach positions the PM as a strategic decision-maker who listens, aligns, and communicates tradeoffs transparently. It’s about:

Saying yes to the underlying need
Saying no to the proposed solution (if misaligned)
Saying yes to a path forward that keeps learning and momentum alive



## GitHub

1. Create and account
2. Create a repo

## Coding Languages

- Python
- JavaScript

## Integrated Development Environments (IDEs)

Download and Install the following IDEs and connect each of them to GitHub

- RStudio
- VS Code
- Cursor
- Windsurf

