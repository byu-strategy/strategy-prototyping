---
title: "Product Innovation"
editor: 
  markdown: 
    wrap: 72
---

::: tweet-center
<blockquote class="twitter-tweet">

<p lang="en" dir="ltr">

Software development has historically been constrained by scarcity –
high costs, specialized skills, and long timelines. So builders chased
only big markets.<br><br> AI is making it cheap, fast, and easy to build
– suddenly it’s economically sane to solve niche workflows for small…

</p>

— Madhu Guru (@realmadhuguru)
<a href="https://twitter.com/realmadhuguru/status/1953253968228040778?ref_src=twsrc%5Etfw">
August 7, 2025 </a>

</blockquote>
:::

```{=html}
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
```

Product innovation is hard: it requires creating something new that
people truly value. Harder still is capturing enough of that value to
sustain a viable business, which is only possible when the price
customers are willing to pay exceeds the costs of delivering the
product, and when the firm can protect that margin against competitors
and substitutes long enough to recoup its fixed costs and earn a return.

Even with the power of cutting-edge AI tools that we are using, there is
still no silver bullet for impactful innovation. However, a number of
excellent Product Innovation frameworks provide structure and promote a
disciplined, logical pursuit of value generating innovations.

In this chapter we discuss 2 such frameworks.

1)  [Innovator's Method](https://www.innovatorsdna.com/) from Jeff Dyer
2)  [The Lean Product Process](https://dan-olsen.com/book/) from Dan
    Olsen

## Innovator's Method

The Innovator's Method was pioneered by Jeff Dyer, Hal Gregersen, and
Clayton Christensen, Nathan Furr, and Curtis Lefrandt.

The approach begins by recognizing 5 key skills that lead to discovery
of an insight about customer needs:

| Skill | Description | Example |
|-----------------|----------------------|----------------------------------|
| **Associating** | Connecting seemingly unrelated concepts, industries, or problems to spark fresh ideas. | Steve Jobs combined calligraphy (design/typography) with computer science to create the first Macintosh with elegant fonts and proportional spacing, a leap that made design central to personal computing. |
| **Questioning** | Challenging assumptions and asking “why,” “what if,” and “why not” to reframe problems. | Elon Musk questioned the cost assumptions of space travel: *“Why does a rocket cost so much? Couldn’t we build one with off-the-shelf parts?”* This led to SpaceX designing reusable rockets. |
| **Observing** | Carefully studying customers, behaviors, and contexts to detect patterns, anomalies, and opportunities. | Scott Cook (founder of Intuit) watched his wife struggle balancing the family checkbook and realized most people needed easy-to-use financial software, leading to Quicken. |
| **Networking** | Seeking diverse perspectives and engaging with people from different backgrounds to gain new insights. | Marc Benioff, founder of Salesforce, deliberately seeks out conversations beyond enterprise software, from tech entrepreneurs to musicians to spiritual leaders. After engaging with Apple leaders and observing the success of the iTunes music store, he asked: *“What if business software could be distributed like songs?”* That insight led to the creation of Salesforce AppExchange in 2005, the first large-scale cloud marketplace for business applications, which transformed Salesforce from a CRM tool into a platform company and unlocked a powerful new growth engine. |
| **Experimenting** | Testing ideas through prototypes, pilots, and new experiences to learn what works and what doesn’t. | Jeff Bezos encouraged Amazon teams to run thousands of A/B experiments on everything from page layout to recommendation algorithms, small, rapid trials that built Amazon’s customer experience edge. |

These skills form the foundation for The Innovator’s Method, which
provides a systematic way to move from idea to scalable business. The
process unfolds in four phases:

1.  **Conceive a creative idea** — Use discovery skills to generate ideas by reframing
    problems and identifying unfulfilled customer jobs-to-be-done.
2.  **Nail the Problem** — Test and refine your understanding of the
    customer’s real pain points to ensure you’re solving a meaningful
    problem.
3.  **Nail the Solution** — Rapidly build and test prototypes or
    minimum viable products (MVPs) to learn what resonates.
4.  **Nail the business model** — Experiment with pricing, revenue
    streams, and growth models until you find a scalable, repeatable
    path to market.

## The Lean Product Process

The Lean Product Process is a repeatable framework for systematically
developing products that customers love developed by Dan Olsen.

It moves from deeply understanding customer needs (problem space) to
iterating on solutions (solution space), always validating with customer
feedback.

![](images/lean-product-process.png)

# Problem Space

## Target Customer

Identify the specific segment of people who will benefit most from your
product.

Not “everyone who might use it” — your *primary* audience you will
optimize for first.

### User Personas

-   Create 2–3 detailed fictional profiles representing your core
    customers.
-   Include:
    -   Demographics (age, job role, location)
    -   Behaviors (habits, buying channels, product usage patterns)
    -   Goals and motivations
    -   Pain points and frustrations
-   Use direct quotes from customer interviews when possible.

## Underserved Needs

Determine what matters most to your target customers and where current
solutions fail them.

### Importance vs. Satisfaction

-   Plot needs on a 2x2:

-   **Importance** (how critical is it to the customer?)

-   **Satisfaction** (how well do current solutions address it?)

-   High importance + low satisfaction = **prime opportunity**.

![Image source: The Lean Product Playbook by Dan
Olsen](images/importance-satisfaction.png)

### Jobs to Be Done

-   Frame needs as *jobs* customers are trying to accomplish.
-   Format:
    -   When I’m **\[situation\]**, I want to **\[motivation\]**, so I
        can **\[desired outcome\]**.
-   Capture all:
    -   **Emotional jobs** (how they want to feel)
    -   **Social jobs** (how they want to be perceived)
    -   **Functional jobs** (what they want to get done)

![Image source: Jeff Dyer, Innovators DNA](images/jobs-to-be-done1.png)

## Value Proposition

Craft a clear statement that answers:

1.  **Who** the product is for\
2.  **What** it does for them\
3.  **Why** it’s better or different than alternatives

Keep it short (1–2 sentences) and customer-oriented.

![Image source: Strategyzer](images/value-prop.png)

### Customer Journey Map

A customer journey map is a tool that shows the step-by-step experience
a customer has with a product or experience.

It can be useful because it helps you:

-   See the experience through the customer’s eyes.
-   Spot pain points and improvement opportunities.
-   Align your team around what really matters to customers.

It’s a tool for designing a smoother, more valuable customer experience.

![Image source: Heart of the Customer](images/journey-map.png)

### Moral Foundations Analysis

# Solution Space

## Feature Set

List the features that directly address underserved needs.

-   Rank features by **customer value** and **feasibility**.
-   Avoid “feature creep” — every feature must trace back to a validated
    need.

## User Experience

Translate features into an intuitive, delightful, and friction-free
customer journey.

### Principles of UX Design

-   **Clarity** – Every screen communicates its purpose instantly.
-   **Consistency** – Patterns, language, and visual design align across
    the product.
-   **Feedback** – Users get immediate, understandable responses to
    actions.
-   **Efficiency** – Reduce cognitive load and clicks for key tasks.
-   **Empathy** – Design flows from the user’s point of view, not the
    internal org chart.

Dan Olsen’s iceberg reminds us that **great UX starts deep below the
surface**.

-   **Conceptual Design** → Drives **Clarity**: a solid mental model
    ensures screens make sense instantly.
-   **Information Architecture** → Enables **Efficiency**:
    well-organized content reduces cognitive load.
-   **Interaction Design** → Supports **Consistency** and **Feedback**:
    familiar patterns and responsive flows guide users.
-   **Visual Design** → Reinforces **Empathy**: aesthetics reflect
    users’ needs and context.

A polished UI alone can’t deliver on these principles, they must be
built into every layer of the iceberg.

![Image source: The Lean Product Playbook by Dan
Olsen](images/ux-iceberg.png)

## Pitch Deck

What do you have to believe for this to be a good idea?

Being non-consensus and right
:::
::::
